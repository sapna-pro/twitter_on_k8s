{"version":3,"sources":["axios.js","pages/Home.js","pages/About/About.js","components/Appbar.js","App.js","serviceWorker.js","index.js","images/songBM.jpg","images/MiracleBG.jpg","images/FFA.jpg"],"names":["instance","axios","create","baseURL","withStyles","theme","root","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","marginTop","flexDirection","margin","flexButton","textBox","textAlign","text","padding","color","fontSize","props","classes","javaWebApp","dotnetApi","useState","value","setValue","showValue","setShowValue","useEffect","console","log","className","Button","variant","get","then","res","data","style","marginLeft","dangerouslySetInnerHTML","__html","AboutPage","songLyrics","setSongLyrics","url","setUrl","sentiment","setSentiment","window","location","href","splitWord","split","includes","last","Paper","alignItems","Typography","onClick","a","lyrics","fetchData","getSong","disabled","post","polarity","getSentiment","src","songBM","alt","miracle","width","FFA","paddingTop","history","createBrowserHistory","useStyles","makeStyles","toolbar","paddingRight","toolbarIcon","mixins","appBar","zIndex","drawer","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","drawerPaperCollapsed","appBarSpacer","content","height","container","paddingBottom","fixedHeight","footer","left","bottom","fontStyle","Dashboard","React","open","setOpen","collapsed","setCollapsed","setTitle","handleDrawerCollapsed","onItemClick","CssBaseline","AppBar","clsx","Toolbar","IconButton","edge","aria-label","component","noWrap","Drawer","Divider","List","ListItem","button","Link","to","ListItemIcon","ListItemText","primary","visible","exact","path","render","About","App","qs","b","i","length","p","decodeURIComponent","replace","search","substr","Fragment","Component","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c1af10a1.chunk.js","sourcesContent":["import axios from \"axios\";\r\nconst instance = axios.create({ baseURL: \"http://192.168.99.100:5001/Song\", });\r\nexport default instance;","import React, { useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport axios from \"../axios\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    backgroundColor: theme.palette.background.paper,\r\n    marginTop: '100px',\r\n    flexDirection: \"column\",\r\n    margin: \"20px\",\r\n  },\r\n  flexButton: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'space-evenly'\r\n  },\r\n  textBox: {\r\n    textAlign: 'center',\r\n    background: '#e8eaf6',\r\n  },\r\n  text: {\r\n    padding: '10px 10px',\r\n    color: 'black',\r\n    fontSize: '20px',\r\n  }\r\n});\r\n\r\nfunction Home(props) {\r\n  const { classes, javaWebApp, dotnetApi } = props;\r\n  const [value, setValue] = useState('');\r\n  const [showValue, setShowValue] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(\"props ===== \", props)\r\n    setShowValue(false);\r\n  }, []);\r\n  console.log(\"props ===== \")\r\n  function callPython() {\r\n    axios.get(`${javaWebApp}/testComms`)\r\n      .then(res => {\r\n        setValue(res.data);\r\n        setShowValue(true);\r\n      });\r\n  }\r\n\r\n  function callJava() {\r\n    axios.get(`${javaWebApp}/testHealth`)\r\n      .then(res => {\r\n        setValue(res.data);\r\n        setShowValue(true);\r\n      });\r\n  }\r\n\r\n  function callDotnet() {\r\n    axios.get(`${dotnetApi}/testHealth`)\r\n      .then(res => {\r\n        setValue(res.data);\r\n        setShowValue(true);\r\n      });\r\n  }\r\n  return (\r\n    <div className={classes.root}>\r\n      <h1>Select Song from Left Naviation</h1>\r\n\r\n      <div >\r\n        <Button variant=\"contained\" color=\"primary\" variant=\"contained\" onClick={callPython}>Python API</Button>\r\n        <Button style={{ marginLeft: \"20px\" }} variant=\"contained\" color=\"primary\" variant=\"contained\" onClick={callJava}>Java API</Button>\r\n        <Button style={{ marginLeft: \"20px\" }} variant=\"contained\" color=\"primary\" variant=\"contained\" onClick={callDotnet}>Dotnet API</Button>\r\n      </div>\r\n\r\n      <div>\r\n        {showValue ? <div className={classes.text} dangerouslySetInnerHTML={{ __html: value }} /> : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nHome.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(Home);\r\n","import React, { useEffect, useState } from 'react'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport ReactMarkdown from 'react-markdown'\r\nimport axios from 'axios'\r\nimport 'github-markdown-css'\r\nimport songBM from \"../../images/songBM.jpg\";\r\nimport miracle from \"../../images/MiracleBG.jpg\";\r\nimport FFA from \"../../images/FFA.jpg\";\r\nimport { Typography, Button } from '@material-ui/core'\r\n\r\nconst AboutPage = ({ javaWebApp, dotnetApi }) => {\r\n\r\n  const getSong = () => {\r\n    async function fetchData() {\r\n      const req = await axios.get(`${dotnetApi}/Song/${url}`)\r\n        .then(res => {\r\n          const lyrics = res.data;\r\n          setSongLyrics(lyrics);\r\n        });\r\n    }\r\n    fetchData();\r\n  }\r\n\r\n  const getSentiment = () => {\r\n    async function fetchData() {\r\n      const req = await axios.post(`${javaWebApp}/sentiment`, {\r\n        \"sentence\": songLyrics\r\n      })\r\n        .then(res => {\r\n          const sentiment = res.data.polarity;\r\n          setSentiment(sentiment);\r\n          console.log(\"sentiment == \", sentiment)\r\n        });\r\n    }\r\n    fetchData();\r\n  }\r\n  const [songLyrics, setSongLyrics] = useState('');\r\n  const [url, setUrl] = useState(\"\");\r\n  const [sentiment, setSentiment] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const url = window.location.href;\r\n    const splitWord = url.split(\"/\");\r\n    console.log(\"splitWord = \", splitWord);\r\n    if (splitWord[4].includes(\"?\")) {\r\n      const splitFour = splitWord[4].split(\"?\");\r\n      const last = splitFour[0];\r\n      setUrl(last);\r\n    } else {\r\n      const last = splitWord[4];\r\n      setUrl(last);\r\n    }\r\n\r\n    console.log(\"url === \", url);\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Paper>\r\n        <div style={{ backgroundColor: 'white', padding: 12, display: \"flex\", marginTop: \"60px\", alignItems: \"center\" }}>\r\n\r\n          {url == \"SongBM\" ? <Typography variant=\"h6\"> Just the way you are </Typography> : (url == \"Miracle\" ? <Typography variant=\"h6\"> Miracle </Typography> : <Typography variant=\"h6\"> Don't Give Up On Me </Typography>)}\r\n          <Button style={{ marginLeft: \"20px\" }} variant=\"contained\" color=\"primary\" onClick={() => getSong()}>Get Lyrics</Button>\r\n          <Button style={{ marginLeft: \"20px\" }} disabled={songLyrics ? false : true} variant=\"contained\" color=\"primary\" onClick={() => getSentiment()}>Get Sentiment</Button>\r\n          {sentiment != 0 && <div style={{ marginLeft: \"20px\" }}>\r\n            <Typography variant=\"h6\">{sentiment}</Typography>\r\n          </div>}\r\n        </div>\r\n      </Paper>\r\n      {songLyrics ?\r\n        <div style={{ padding: \"20px\" }}>\r\n          {url == \"SongBM\" ? <img src={songBM} alt=\"\" /> : (url == \"Miracle\" ? <img src={miracle} alt=\"\" style={{ width: \"600px\" }} /> : <img src={FFA} alt=\"\" />)}\r\n          <div dangerouslySetInnerHTML={{ __html: songLyrics }} style={{ paddingTop: \"20px\" }} />\r\n        </div>\r\n        : null}\r\n    </div>\r\n\r\n  )\r\n}\r\nexport default AboutPage\r\n","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { Router, Route, Link } from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport BarChartIcon from '@material-ui/icons/BarChart';\r\nimport LayersIcon from '@material-ui/icons/Layers';\r\n\r\n// import your components:\r\nimport Home from \"../pages/Home\";\r\nimport About from \"../pages/About/About\";\r\n\r\nconst drawerWidth = 240;\r\nconst history = createBrowserHistory();\r\n\r\n// css\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  drawerPaperCollapsed: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(0),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(0),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n  footer: {\r\n    position: 'fixed',\r\n    left: 0,\r\n    bottom: 0,\r\n    width: '100%',\r\n    backgroundColor: 'grey',\r\n    color: 'white',\r\n    textAlign: 'center',\r\n    fontStyle: 'italic',\r\n  },\r\n}));\r\n\r\n\r\nexport default function Dashboard({ javaWebApp, dotnetApi }) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(true);\r\n  const [collapsed, setCollapsed] = React.useState(false);\r\n  const [title, setTitle] = React.useState('Rockstar App');\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n    setCollapsed(false);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n    setCollapsed(false);\r\n  };\r\n  const handleDrawerCollapsed = () => {\r\n    setCollapsed(true);\r\n    setOpen(false);\r\n  };\r\n  const onItemClick = title => () => {\r\n    setTitle(title);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n\r\n      {/* This is the header AppBar */}\r\n      <AppBar position=\"absolute\" className={clsx(classes.appBar,\r\n        open && classes.appBarShift, collapsed && classes.appBar)}>\r\n        <Toolbar title={title} className={classes.toolbar}>\r\n\r\n          {/* The Menu icon exposes the left pane menu bar */}\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n\r\n          {/* The title is set by the components */}\r\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n\r\n      {/* The Router component routes URLs to your components */}\r\n      <Router history={history} title={title} >\r\n\r\n        {/* Drawers are left pane menu items in React-speak */}\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper,\r\n              !open && classes.drawerPaperClose,\r\n              collapsed && classes.drawerPaperCollapsed)\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n\r\n            {/* This icon collapses the left pane enough to show menu item icons */}\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n\r\n          {/* Left pane menu items */}\r\n          <List>\r\n\r\n            {/* Charts menu item*/}\r\n            <ListItem button component={Link} to=\"/\">\r\n              <ListItemIcon>\r\n                <BarChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Home\" />\r\n              {title === 'Home' &&\r\n                <ListItemIcon>\r\n                  <IconButton onClick={handleDrawerCollapsed}>\r\n                    <ChevronLeftIcon />\r\n                  </IconButton>\r\n                </ListItemIcon>\r\n              }\r\n            </ListItem>\r\n\r\n            {/* Charts menu item*/}\r\n            <ListItem button component={Link} to=\"/charts/Miracle\" onClick={onItemClick('Song')}>\r\n              <ListItemIcon>\r\n                <BarChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Miracle\" />\r\n              {title === 'Miracle' &&\r\n                <ListItemIcon>\r\n                  <IconButton onClick={handleDrawerCollapsed}>\r\n                    <ChevronLeftIcon />\r\n                  </IconButton>\r\n                </ListItemIcon>\r\n              }\r\n            </ListItem>\r\n\r\n            {/* Deposits menu item*/}\r\n            <ListItem button component={Link} to=\"/deposits/SongBM\" onClick={onItemClick('Song')}>\r\n              <ListItemIcon>\r\n                <LayersIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Way you are\" />\r\n              {title === 'Way you are' &&\r\n                <ListItemIcon>\r\n                  <IconButton onClick={handleDrawerCollapsed}>\r\n                    <ChevronLeftIcon />\r\n                  </IconButton>\r\n                </ListItemIcon>\r\n              }\r\n            </ListItem>\r\n\r\n            {/* Orders menu item */}\r\n            <ListItem button component={Link} to=\"/orders/FFA\" onClick={onItemClick(\"Song\")}>\r\n              <ListItemIcon>\r\n                <PeopleIcon />\r\n              </ListItemIcon>\r\n              <ListItemText primary=\"Don't give up\" />\r\n              {title === 'Dont give up' &&\r\n                <ListItemIcon>\r\n                  <IconButton onClick={handleDrawerCollapsed} visible={title}>\r\n                    <ChevronLeftIcon />\r\n                  </IconButton>\r\n                </ListItemIcon>\r\n              }\r\n            </ListItem>\r\n\r\n\r\n          </List>\r\n\r\n        </Drawer>\r\n\r\n        {/* This is your mission control: Matches URLs above to your components */}\r\n        <main className={classes.content}>\r\n          <Route exact path=\"/\" render={(props) => <Home javaWebApp={javaWebApp} dotnetApi={dotnetApi} {...props} />} />\r\n          <Route path=\"/charts/Miracle\" render={(props) => <About javaWebApp={javaWebApp} dotnetApi={dotnetApi} {...props} />} />\r\n          <Route path=\"/deposits/SongBM\" render={(props) => <About javaWebApp={javaWebApp} dotnetApi={dotnetApi} {...props} />} />\r\n          <Route path=\"/orders/FFA\" render={(props) => <About javaWebApp={javaWebApp} dotnetApi={dotnetApi} {...props} />} />\r\n        </main>\r\n      </Router>\r\n\r\n      {/* Whatever you put here will appear on all your pages, style appropriately! */}\r\n      {/* <div className={classes.footer}>\r\n        <p>MIT License, dinorows@gmail.com 2020</p>\r\n      </div> */}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from 'react';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Appbar from './components/Appbar.js';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n\r\n  render() {\r\n    var qs = (function (a) {\r\n      if (a === \"\") return {};\r\n      var b = {};\r\n      for (var i = 0; i < a.length; ++i) {\r\n        var p = a[i].split('=', 2);\r\n        if (p.length === 1)\r\n          b[p[0]] = \"\";\r\n        else\r\n          b[p[0]] = decodeURIComponent(p[1].replace(/\\+/g, \" \"));\r\n      }\r\n      console.log(b);\r\n      return b;\r\n    })(window.location.search.substr(1).split('&'));\r\n\r\n    let javaWebApp = qs[\"javaWebApp\"];\r\n    let dotnetApi = qs[\"dotnetWebApi\"];\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <CssBaseline />\r\n        <Appbar javaWebApp={javaWebApp} dotnetApi={dotnetApi} />\r\n        {/* <Appbar /> */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/songBM.d86dd52a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/MiracleBG.d9da5fed.jpg\";","module.exports = __webpack_public_path__ + \"static/media/FFA.a2365f96.jpg\";"],"sourceRoot":""}