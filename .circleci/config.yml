version: 2.1
jobs:
  build:
    docker:
       - image: circleci/python:3.8.3
    steps:
      - checkout
      - run:
          name: Show files
          command: |
            ls -al  
      - setup_remote_docker:
          version: 19.03.13
      - run:
          name: Zip files
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
            sudo apt-get --allow-releaseinfo-change update -y
            sudo apt-get install -y less
            ls -al
      - run:
          name: Install KubeCtl
          command: |
            curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.18.9/2020-11-02/bin/linux/amd64/kubectl
            chmod +x ./kubectl
            mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
            kubectl version --short --client
      - run:
          name: Install AWS-Auth
          command: |
            cd ~
            curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
            chmod +x ./aws-iam-authenticator
            mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
            echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - run:
          name: Docker rockstar-front Operations
          command: |
            echo "LOG IN COMPLETED" | docker login -u=$DockerUsername -p=$DockerPassword
            ls -al
            docker build -f rockstar-front/Dockerfile -t $DockerUsername/rockstar-front:circleci .
            sleep 120
            docker push $DockerUsername/rockstar-front:circleci
      - run:
          name: Docker sa-flask-logic Operations
          command: |
            docker build -f sa-flask-logic/Dockerfile -t $DockerUsername/sa-flask-logic:circleci .
            sleep 120
            docker push $DockerUsername/sa-flask-logic:circleci
      - run:
          name: Docker sa-java-webapp Operations
          command: |
            docker build -f sa-java-webapp/Dockerfile -t $DockerUsername/sa-java-webapp:circleci .
            sleep 120
            docker push $DockerUsername/sa-java-webapp:circleci
      - run:
          name: Docker rs-dotnet Operations
          command: |
            echo "dotnet is running"
      - run:
          name: deploy on K8S
          command: |
            echo "LOG IN COMPLETED" | docker login -u=$DockerUsername -p=$DockerPassword
            aws eks update-kubeconfig --name terraform-eks-demo --region us-west-2 --role-arn arn:aws:iam::327657571721:user/sapna
            ls -al
            cp config ~/.kube/config
            kubectl apply -f config-map-aws-auth.yml
            sleep 10
            kubectl get nodes
            cd k8s/
            kubectl apply -f rockstar-front-deployment.yaml
            sleep 10
            kubectl get deployments
            kubectl apply -f service-rockstar-front-lb.yaml
            sleep 10
            kubectl get svc
            sleep 10
            kubectl apply -f sa-flask-deployment.yaml
            sleep 10
            kubectl apply -f service-sa-flask-lb.yaml
            sleep 10
            kubectl apply -f sa-webapp-deployment.yaml
            sleep 10
            kubectl apply -f service-sa-webapp-lb.yaml
            sleep 10
            kubectl apply -f rs-dotnet-api-deployment.yml
            sleep 10
            kubectl apply -f rs-dotnet-api-service.yml

workflows:
  version: 2
  build_and_test:
    jobs:
      - build